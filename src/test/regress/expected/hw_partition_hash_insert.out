CREATE schema FVT_COMPRESS_QWER;
set search_path to FVT_COMPRESS_QWER;
create table test_partition_for_null_hash (a int, b int, c int, d int) 
partition by hash (a) 
(
	partition test_partition_for_null_hash_p1,
	partition test_partition_for_null_hash_p2,
	partition test_partition_for_null_hash_p3
);
insert into test_partition_for_null_hash values (0, 0, 0, 0);
insert into test_partition_for_null_hash values (1, 1, 1, 1);
insert into test_partition_for_null_hash values (5, 5, 5, 5);
insert into test_partition_for_null_hash select * from test_partition_for_null_hash;
select * from test_partition_for_null_hash order by a;
 a | b | c | d 
---+---+---+---
 0 | 0 | 0 | 0
 0 | 0 | 0 | 0
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
(6 rows)

-- success
insert into test_partition_for_null_hash values (null, null, null, null);
-- success
insert into test_partition_for_null_hash values (0, null, null, null);
CREATE TABLE select_hash_partition_table_000_3(
 C_CHAR_1 CHAR(1),
 C_CHAR_2 CHAR(10),
 C_CHAR_3 CHAR(102400),
 C_VARCHAR_1 VARCHAR(1),
 C_VARCHAR_2 VARCHAR(10),
 C_VARCHAR_3 VARCHAR(1024),
 C_INT INTEGER,
 C_BIGINT BIGINT,
 C_SMALLINT SMALLINT,
 C_FLOAT FLOAT,
 C_NUMERIC numeric(10,5),
 C_DP double precision,
 C_DATE DATE,
 C_TS_WITHOUT TIMESTAMP WITHOUT TIME ZONE,
 C_TS_WITH TIMESTAMP WITH TIME ZONE ) 
 partition by hash (C_INT)
( 
     partition select_hash_partition_000_3_1,
     partition select_hash_partition_000_3_2
);
create index select_list_partition_table_index_000_3 ON select_hash_partition_table_000_3(C_CHAR_3,C_VARCHAR_3,C_INT,C_TS_WITHOUT) local(partition select_list_partition_000_3_1, partition select_list_partition_000_3_3);
create view select_list_partition_table_view_000_3 as select * from select_hash_partition_table_000_3;
INSERT INTO select_hash_partition_table_000_3 VALUES('A','ABC','ABCDEFG','a','abc','abcdefg',111,111111,11,1.1,1.11,1.111,'2000-01-01','2000-01-01 01:01:01','2000-01-01 01:01:01+01');
INSERT INTO select_hash_partition_table_000_3 VALUES('B','BCD','BCDEFGH','b','bcd','bcdefgh',222,222222,22,2.2,2.22,2.222,'2000-02-02','2000-02-02 02:02:02','2000-02-02 02:02:02+02');
INSERT INTO select_hash_partition_table_000_3 VALUES('C','CDE','CDEFGHI','c','cde','cdefghi',333,333333,33,3.3,3.33,3.333,'2000-03-03','2000-03-03 03:03:03','2000-03-03 03:03:03+03');
INSERT INTO select_hash_partition_table_000_3 VALUES('D','DEF','DEFGHIJ','d','def','defghij',444,444444,44,4.4,4.44,4.444,'2000-04-04','2000-04-04 04:04:04','2000-04-04 04:04:04+04');
INSERT INTO select_hash_partition_table_000_3 VALUES('E','EFG','EFGHIJK','e','efg','efghijk',555,555555,55,5.5,5.55,5.555,'2000-05-05','2000-05-05 05:05:05','2000-05-05 05:05:05+05');
INSERT INTO select_hash_partition_table_000_3 VALUES('F','FGH','FGHIJKL','f','fgh','fghijkl',666,666666,66,6.6,6.66,6.666,'2000-06-06','2000-06-06 06:06:06','2000-06-06 06:06:06+06');
INSERT INTO select_hash_partition_table_000_3 VALUES('G','GHI','GHIJKLM','g','ghi','ghijklm',777,777777,77,7.7,7.77,7.777,'2000-07-07','2000-07-07 07:07:07','2000-07-07 07:07:07+07');
INSERT INTO select_hash_partition_table_000_3 VALUES('H','HIJ','HIJKLMN','h','hij','hijklmn',888,888888,88,8.8,8.88,8.888,'2000-08-08','2000-08-08 08:08:08','2000-08-08 08:08:08+08');
INSERT INTO select_hash_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',999,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
INSERT INTO select_hash_partition_table_000_3 VALUES('H','HIJ','HIJKLMN','h','hij','hijklmn',888,888888,88,8.8,8.88,8.888,'2000-08-08','2000-08-08 08:08:08','2000-08-08 08:08:08+08');
INSERT INTO select_hash_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',999,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
INSERT INTO select_hash_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',1100,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
INSERT INTO select_hash_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',1600,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
select count(*) from select_hash_partition_table_000_3;
 count 
-------
    13
(1 row)

CREATE TABLE partition_wise_join_table_001_1 (ID INT NOT NULL,NAME VARCHAR(50) NOT NULL,SCORE NUMERIC(4,1),BIRTHDAY TIMESTAMP WITHOUT TIME ZONE,ADDRESS TEXT,SALARY double precision,RANK SMALLINT) 
partition  by  hash(ID) 
( 
	partition partition_wise_join_table_001_1_1,
	partition partition_wise_join_table_001_1_2
) ;
INSERT INTO partition_wise_join_table_001_1 VALUES (generate_series(1,9),'PARTITION WIASE JOIN 1-1-' || generate_series(1,10),90 + random() * 10,'1990-8-8',$$No.88# Science 6 Street  of Xi'an  of China $$,10000,13 );
INSERT INTO partition_wise_join_table_001_1 VALUES (generate_series(41,49),'PARTITION WIASE JOIN 1-3-' || generate_series(40,60),90 + random() * 10,'1990-8-8',$$No.88# Science 6 Street  of Xi'an  of China $$,15000,15 );
select count(*) from partition_wise_join_table_001_1;
 count 
-------
   153
(1 row)

CREATE TABLE partition_wise_join_table_001_2 (ID INT NOT NULL,NAME VARCHAR(50) NOT NULL,SCORE NUMERIC(4,1),BIRTHDAY TIMESTAMP WITHOUT TIME ZONE,ADDRESS TEXT,SALARY double precision ) 
partition by hash(ID)
( 
	partition partition_wise_join_table_001_1_1, 
	partition partition_wise_join_table_001_1_2
);
INSERT INTO partition_wise_join_table_001_2 VALUES (generate_series(1,9),'PARTITION WIASE JOIN 2-1-' || generate_series(1,10),90 + random() * 10,'1990-8-8',$$No 66# Science 4 Street  of Xi'an  of China $$,10000);
INSERT INTO partition_wise_join_table_001_2 VALUES (generate_series(71,79),'PARTITION WIASE JOIN 2-3-' || generate_series(70,80),90 + random() * 10,'1990-8-8',$$No 77# Science 4 Street  of Xi'an  of China $$,15000);
select count(*) from partition_wise_join_table_001_2;
 count 
-------
   189
(1 row)

CREATE TABLE select_partition_table_000_3(
	C_CHAR_1 CHAR(1),
	C_CHAR_2 CHAR(10),
	C_CHAR_3 CHAR(102400),
	C_VARCHAR_1 VARCHAR(1),
	C_VARCHAR_2 VARCHAR(10),
	C_VARCHAR_3 VARCHAR(1024),
	C_INT INTEGER,
	C_BIGINT BIGINT,
	C_SMALLINT SMALLINT,
	C_FLOAT FLOAT,
	C_NUMERIC numeric(10,5),
	C_DP double precision,
	C_DATE DATE,
	C_TS_WITHOUT TIMESTAMP WITHOUT TIME ZONE,
	C_TS_WITH TIMESTAMP WITH TIME ZONE ) 
	partition by hash (C_INT)
( 
     partition select_partition_000_3_1,
     partition select_partition_000_3_2
);
create index select_partition_table_index_000_3 ON select_partition_table_000_3(C_CHAR_3,C_VARCHAR_3,C_INT,C_TS_WITHOUT) local(partition select_partition_000_3_1, partition select_partition_000_3_3);
create view select_partition_table_view_000_3 as select * from select_partition_table_000_3;
INSERT INTO select_partition_table_000_3 VALUES('A','ABC','ABCDEFG','a','abc','abcdefg',111,111111,11,1.1,1.11,1.111,'2000-01-01','2000-01-01 01:01:01','2000-01-01 01:01:01+01');
INSERT INTO select_partition_table_000_3 VALUES('B','BCD','BCDEFGH','b','bcd','bcdefgh',222,222222,22,2.2,2.22,2.222,'2000-02-02','2000-02-02 02:02:02','2000-02-02 02:02:02+02');
INSERT INTO select_partition_table_000_3 VALUES('C','CDE','CDEFGHI','c','cde','cdefghi',333,333333,33,3.3,3.33,3.333,'2000-03-03','2000-03-03 03:03:03','2000-03-03 03:03:03+03');
INSERT INTO select_partition_table_000_3 VALUES('D','DEF','DEFGHIJ','d','def','defghij',444,444444,44,4.4,4.44,4.444,'2000-04-04','2000-04-04 04:04:04','2000-04-04 04:04:04+04');
INSERT INTO select_partition_table_000_3 VALUES('E','EFG','EFGHIJK','e','efg','efghijk',555,555555,55,5.5,5.55,5.555,'2000-05-05','2000-05-05 05:05:05','2000-05-05 05:05:05+05');
INSERT INTO select_partition_table_000_3 VALUES('F','FGH','FGHIJKL','f','fgh','fghijkl',666,666666,66,6.6,6.66,6.666,'2000-06-06','2000-06-06 06:06:06','2000-06-06 06:06:06+06');
INSERT INTO select_partition_table_000_3 VALUES('G','GHI','GHIJKLM','g','ghi','ghijklm',777,777777,77,7.7,7.77,7.777,'2000-07-07','2000-07-07 07:07:07','2000-07-07 07:07:07+07');
INSERT INTO select_partition_table_000_3 VALUES('H','HIJ','HIJKLMN','h','hij','hijklmn',888,888888,88,8.8,8.88,8.888,'2000-08-08','2000-08-08 08:08:08','2000-08-08 08:08:08+08');
INSERT INTO select_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',999,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
INSERT INTO select_partition_table_000_3 VALUES('H','HIJ','HIJKLMN','h','hij','hijklmn',888,888888,88,8.8,8.88,8.888,'2000-08-08','2000-08-08 08:08:08','2000-08-08 08:08:08+08');
INSERT INTO select_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',999,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
INSERT INTO select_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',1100,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
INSERT INTO select_partition_table_000_3 VALUES('I','IJK','IJKLMNO','i','ijk','ijklmno',1600,999999,99,9.9,9.99,9.999,'2000-09-09','2000-09-09 09:09:09','2000-09-09 09:09:09+09');
select count(*) from select_partition_table_000_3;
 count 
-------
    13
(1 row)

create table test_select_hash_partition (a int, b int) 
partition by hash(a) 
(
	partition test_select_hash_partition_p1, 
	partition test_select_hash_partition_p2,
	partition test_select_hash_partition_p3
);
insert into test_select_hash_partition values(1,1);
insert into test_select_hash_partition values(2,2);
insert into test_select_hash_partition values(0,0);
insert into test_select_hash_partition values(3,3);
insert into test_select_hash_partition values(7,5);
insert into test_select_hash_partition values(7,6);
select * from test_select_hash_partition order by a;
 a | b 
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
 7 | 5
 7 | 6
(6 rows)

CREATE TABLE hw_partition_select_test(C_INT INTEGER)
 partition by hash (C_INT)
( 
     partition hw_partition_select_test_part_1,
     partition hw_partition_select_test_part_2,
     partition hw_partition_select_test_part_3
);
insert  into hw_partition_select_test values(111);
insert  into hw_partition_select_test values(555);
insert  into hw_partition_select_test values(888);
insert  into hw_partition_select_test values(100);
select count(*) from hw_partition_select_test;
 count 
-------
     4
(1 row)

create table hw_hash_partition_inert_null (c1 int, c2 timestamp)
partition by hash (c2) 
(
	partition hw_hash_partition_inert_null_p1,
	partition hw_hash_partition_inert_null_p2,
	partition hw_hash_partition_inert_null_p3,
	partition hw_hash_partition_inert_null_p4,
	partition hw_hash_partition_inert_null_p5
);
insert into hw_hash_partition_inert_null values (generate_series(1, 1000), null);
insert into hw_hash_partition_inert_null values (1001, '2025-02-24 00:00:00'::timestamp);
insert into hw_hash_partition_inert_null values (1002, '2024-01-01 00:00:00'::timestamp);
insert into hw_hash_partition_inert_null values (1003, '2024-06-06 00:00:00'::timestamp);
select p.relname, ta.row_count from (select tableoid::regclass as partition_id, count(*) as row_count from hw_hash_partition_inert_null group by partition_id) as ta left join pg_partition p on p.oid = ta.partition_id order by p.oid;
             relname             | row_count 
---------------------------------+-----------
 hw_hash_partition_inert_null_p1 |      1000
 hw_hash_partition_inert_null_p2 |         1
 hw_hash_partition_inert_null_p3 |         1
 hw_hash_partition_inert_null_p4 |         1
(4 rows)

drop table hw_hash_partition_inert_null;
-- non index partition key
drop table if exists t1_part;
NOTICE:  table "t1_part" does not exist, skipping
create table t1_part (c1 int, c2 int) partition by hash (c2) partitions 6;
insert into t1_part values (generate_series(1, 1000), null);
insert into t1_part values (1001, generate_series(1, 100));
explain (costs off) select * from t1_part where c2 is null;
           QUERY PLAN            
---------------------------------
 Partitioned Seq Scan on t1_part
   Filter: (c2 IS NULL)
   Selected Partitions:  1
(3 rows)

explain (costs off) select * from t1_part where c2 = 20;
           QUERY PLAN            
---------------------------------
 Partitioned Seq Scan on t1_part
   Filter: (c2 = 20)
   Selected Partitions:  5
(3 rows)

drop table t1_part;
-- local index partition key
drop table if exists t1_partindex;
NOTICE:  table "t1_partindex" does not exist, skipping
create table t1_partindex (c1 int, c2 int) partition by hash (c2) partitions 6;
create index t1_partindex_c2_ind on t1_partindex (c2) local;
insert into t1_partindex values (generate_series(1, 1000), null);
insert into t1_partindex values (2000, generate_series(1, 100));
explain (costs off) select * from t1_partindex where c2 is null;
                         QUERY PLAN                         
------------------------------------------------------------
 Partitioned Bitmap Heap Scan on t1_partindex
   Recheck Cond: (c2 IS NULL)
   Selected Partitions:  1
   ->  Partitioned Bitmap Index Scan on t1_partindex_c2_ind
         Index Cond: (c2 IS NULL)
         Selected Partitions:  1
(6 rows)

explain (costs off) select * from t1_partindex where c2 = 20;
                         QUERY PLAN                         
------------------------------------------------------------
 Partitioned Bitmap Heap Scan on t1_partindex
   Recheck Cond: (c2 = 20)
   Selected Partitions:  5
   ->  Partitioned Bitmap Index Scan on t1_partindex_c2_ind
         Index Cond: (c2 = 20)
         Selected Partitions:  5
(6 rows)

drop table t1_partindex;
-- global index partition key
drop table if exists t1_partindex_global;
NOTICE:  table "t1_partindex_global" does not exist, skipping
create table t1_partindex_global (c1 int, c2 int) partition by hash (c2) partitions 6;
create index t1_partindex_global_c2_ind on t1_partindex_global (c2);
insert into t1_partindex_global values (generate_series(1, 1000), null);
insert into t1_partindex_global values (2000, generate_series(1, 100));
explain (costs off) select * from t1_partindex_global where c2 is null;
                      QUERY PLAN                       
-------------------------------------------------------
 Bitmap Heap Scan on t1_partindex_global
   Recheck Cond: (c2 IS NULL)
   ->  Bitmap Index Scan on t1_partindex_global_c2_ind
         Index Cond: (c2 IS NULL)
(4 rows)

explain (costs off) select * from t1_partindex_global where c2 = 20;
                      QUERY PLAN                       
-------------------------------------------------------
 Bitmap Heap Scan on t1_partindex_global
   Recheck Cond: (c2 = 20)
   ->  Bitmap Index Scan on t1_partindex_global_c2_ind
         Index Cond: (c2 = 20)
(4 rows)

drop table t1_partindex_global;
drop schema FVT_COMPRESS_QWER cascade;
NOTICE:  drop cascades to 9 other objects
DETAIL:  drop cascades to table test_partition_for_null_hash
drop cascades to table select_hash_partition_table_000_3
drop cascades to view select_list_partition_table_view_000_3
drop cascades to table partition_wise_join_table_001_1
drop cascades to table partition_wise_join_table_001_2
drop cascades to table select_partition_table_000_3
drop cascades to view select_partition_table_view_000_3
drop cascades to table test_select_hash_partition
drop cascades to table hw_partition_select_test
