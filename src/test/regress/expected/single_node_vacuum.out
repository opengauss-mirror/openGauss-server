--
-- VACUUM
--
CREATE TABLE vactst (i INT);
INSERT INTO vactst VALUES (1);
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst VALUES (0);
SELECT count(*) FROM vactst;
 count 
-------
  2049
(1 row)

DELETE FROM vactst WHERE i != 0;
SELECT * FROM vactst;
 i 
---
 0
(1 row)

VACUUM FULL vactst;
UPDATE vactst SET i = i + 1;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst SELECT * FROM vactst;
INSERT INTO vactst VALUES (0);
SELECT count(*) FROM vactst;
 count 
-------
  2049
(1 row)

DELETE FROM vactst WHERE i != 0;
VACUUM (FULL) vactst;
DELETE FROM vactst;
SELECT * FROM vactst;
 i 
---
(0 rows)

VACUUM (FULL, FREEZE) vactst;
VACUUM (ANALYZE, FULL) vactst;
CREATE TABLE vaccluster (i INT PRIMARY KEY);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "vaccluster_pkey" for table "vaccluster"
ALTER TABLE vaccluster CLUSTER ON vaccluster_pkey;
CLUSTER vaccluster;
CREATE FUNCTION do_analyze() RETURNS VOID VOLATILE LANGUAGE SQL
	AS 'ANALYZE pg_am';
CREATE FUNCTION wrap_do_analyze(c INT) RETURNS INT IMMUTABLE LANGUAGE SQL
	AS 'SELECT $1 FROM do_analyze()';
CREATE INDEX ON vaccluster(wrap_do_analyze(i));
INSERT INTO vaccluster VALUES (1), (2);
ERROR:  ANALYZE cannot be executed from a function or multi-command string
CONTEXT:  SQL function "do_analyze" statement 1
SQL function "wrap_do_analyze" statement 1
ANALYZE vaccluster;
set xc_maintenance_mode = on;
VACUUM FULL pg_am;
VACUUM FULL pg_class;
VACUUM FULL pg_database;
set xc_maintenance_mode = off;
VACUUM FULL vaccluster;
VACUUM FULL vactst;
-- check behavior with duplicate column mentions
VACUUM ANALYZE vaccluster(i,i);
ANALYZE vaccluster(i,i);
DROP TABLE vaccluster;
DROP TABLE vactst;
-- test vacuum opt
set enable_vacuum_extreme_xmin=off; -- should error
ERROR:  parameter "enable_vacuum_extreme_xmin" cannot be changed now
set enable_vacuum_extreme_xmin=on; -- should error
ERROR:  parameter "enable_vacuum_extreme_xmin" cannot be changed now
alter system set enable_vacuum_extreme_xmin=on;
select pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

show enable_vacuum_extreme_xmin;
 enable_vacuum_extreme_xmin 
----------------------------
 on
(1 row)

drop table if exists vac_opt_t;
NOTICE:  table "vac_opt_t" does not exist, skipping
drop table if exists vac_opt_t2;
NOTICE:  table "vac_opt_t2" does not exist, skipping
create table vac_opt_t(c1 int);
insert into vac_opt_t values(generate_series(1,10));
vacuum vac_opt_t;
insert into vac_opt_t values(generate_series(1,10));
vacuum analyze vac_opt_t;
delete from vac_opt_t where c1 < 5;
vacuum full vac_opt_t ;
select * from vac_opt_t order by c1;
 c1 
----
  5
  5
  6
  6
  7
  7
  8
  8
  9
  9
 10
 10
(12 rows)

update vac_opt_t set c1 = -1;
create table vac_opt_t2(c1 int, c2 varchar(20));
insert into vac_opt_t2 values(generate_series(1,1000), 'hello');
Delete from vac_opt_t2 where c1 in (8, 9, 10);
select * from vac_opt_t order by c1;
 c1 
----
 -1
 -1
 -1
 -1
 -1
 -1
 -1
 -1
 -1
 -1
 -1
 -1
(12 rows)

select * from vac_opt_t2 order by c1 limit 10;
 c1 |  c2   
----+-------
  1 | hello
  2 | hello
  3 | hello
  4 | hello
  5 | hello
  6 | hello
  7 | hello
 11 | hello
 12 | hello
 13 | hello
(10 rows)

alter system set enable_vacuum_extreme_xmin=off;
drop table vac_opt_t;
drop table vac_opt_t2;
